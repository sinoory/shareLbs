var mongoose = require('mongoose');

var HashSchema =new mongoose.Schema({
        hashval : {type : Number},
        //hashverify is send to client as a verify code
        hashverify : {type : Number},
});


//var HashMod = mongoose.model('HashMod',HashSchema);
var MongOpr=require("memod/mongooseOpr");

var mo = new MongOpr("gpsBusHashdb",HashSchema,"gpsBusHashMod");
mo.init();
function HashdbOpr(){
}

var st=new Date();
function addoc(i,len,hashveryArry,db ){
    var ind=parseInt(Math.random()*len);
    var hashv=hashveryArry[ind];
    console.log(i+":"+hashv); 
    db.add({hashval:i,hashverify:hashv},function(err,n){
        if(!err){
            hashveryArry.splice(ind,1);
            len--;
            if(len<=0){  
		var now=new Date();
                console.log("finished,"+st+"-->"+now);  
                return;  
            }else{       
                addoc(++i,len,hashveryArry,db);
            }
        }else{
            console.log("error,exit");
        }
    });
}

HashdbOpr.prototype={
    generateRecord:function(hashfrom,hashto){
        var i=hashfrom,len=hashto-hashfrom;
        var hashveryArry=new Array();
        while(i++<hashto){
            hashveryArry.push(i);
        }
        i=hashfrom;
        var hashv=0;
        var ind=0;
	addoc(i,len,hashveryArry,mo);
    },
    cleardb:function(){
        mo.del({},function(){
            console.log("clear finished");
        });
    },
    getRandomOne:function(callback){
        mo.count({},function(err,cnt){
            var ind=parseInt(Math.random()*cnt);
            mo.getAt(ind,callback);
        });
    },
};

var ho = new HashdbOpr();
module.exports = ho;
//============tool tst============
function genRcd(){
    ho.generateRecord(100100,100200);
    //ho.generateRecord(100100,989917);
}
function clearAll(){
    ho.cleardb();
}
genRcd();
//clearAll();
//look();
function look(){
    console.log("====hashdbOpr.js look==dbname="+mo.dbname);
    mo.count({},function(err,cnt){
        console.log("cnt="+cnt);
    });
    mo.getAt(50,function(err,doc){
        if(doc){
            console.log('ok,getAt='+doc.hashval+":"+doc.hashverify);
            doc.remove();
        }else{
            console.log("err,getAt no doc at such index")
        }
    });
    mo.del({hashval:100155},function(){
        //console.log("del finished");
    });
    var ho = new HashdbOpr();
    ho.getRandomOne(function(err,doc){
        if(doc){ 
            console.log("getRandomOne doc="+doc.hashval+":"+doc.hashverify);
        }
    });
}



